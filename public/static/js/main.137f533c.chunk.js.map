{"version":3,"sources":["components/NavBar.js","components/HomePage.js","components/SignUpPage.js","components/LoginPage.js","components/NotFound.js","components/ProfilePageSetup.js","components/ProfilePage.js","components/ExerciseCard.js","components/ExerciseCollection.js","components/ExerciseSearch.js","components/ExerciseDetail.js","components/WorkoutPage.js","components/NutritionPage.js","components/App.js","index.js"],"names":["NavBar","user","setUser","history","useHistory","Navbar","collapseOnSelect","bg","expand","className","to","Brand","Toggle","Collapse","Nav","activeKey","window","location","pathname","Link","onClick","fetch","method","then","r","ok","push","HomePage","profiles","first_name","username","Button","id","block","size","e","SignUpPage","onLogin","useState","setFirstname","last_name","setLastname","email","setEmail","setUsername","password","setPassword","passwordConfirmation","setPasswordConfirmation","errors","setErrors","isLoading","setIsLoading","Form","onSubmit","preventDefault","headers","body","JSON","stringify","password_confirmation","json","err","Group","controlId","Label","Control","autoFocus","autoComplete","type","value","onChange","target","disabled","length","map","Alert","LoginPage","NotFound","ProfilePageSetup","handleUpdateUser","age","setAge","gender","setGender","height","setHeight","weight","setWeight","fitness_goal","setFitness_goal","nutrition_goal","setNutrition_goal","parseInt","as","ProfilePage","profile","setProfile","useEffect","userData","console","log","toFixed","src","alt","width","href","ExerciseCard","exerciseCard","handleSelectExercise","Card","fluid","centered","Image","img","Content","Description","name","ExerciseCollection","exerciseList","itemsPerRow","textAlign","exercise","ExerciseSearch","search","handleSearch","ExerciseDetail","selectedExercise","target_area","video","title","frameBorder","allow","allowFullScreen","WorkoutPage","setExerciseList","isLoaded","setIsLoaded","isLoadedMore","setIsLoadedMore","setSearch","filteredExerciseList","setFilteredExerciseList","setSelectedExercise","workoutPrograms","setWorkoutPrograms","userProgram","setUserProgram","resp","exerciseData","programData","Container","toUpperCase","times_per_week","reps","sets","forEach","program","toLowerCase","filter","includes","NutritionPage","fitnessGoal","nutritionGoal","userWeight","userHeight","userGender","userAge","intake","setIntake","searchResults","setSearchResults","newActivityFactor","style","response","data","catch","error","serving_size_g","calories","protein_g","fat_total_g","carbohydrates_total_g","sodium_mg","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.137f533c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction NavBar({ user, setUser }) {\r\n  let history = useHistory();\r\n  function handleLogoutClick() {\r\n    fetch(\"/logout\", { method: \"DELETE\" }).then((r) => {\r\n      if (r.ok) {\r\n        setUser(null)\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar collapseOnSelect bg=\"light\" expand=\"md\" className=\"mb-3\">\r\n        <LinkContainer to=\"/\">\r\n          <Navbar.Brand className=\"font-weight-bold text-muted\">\r\n          🌱FitnessGG\r\n          </Navbar.Brand>\r\n        </LinkContainer>\r\n\r\n        <Navbar.Toggle />\r\n\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Nav activeKey={window.location.pathname}>\r\n          {user ? (\r\n            <>\r\n              <LinkContainer to=\"/nutrition\">\r\n                <Nav.Link>🍎Nutrition</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/workout\">\r\n                <Nav.Link>💪Workout</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/profile\">\r\n                <Nav.Link>❤️Profile</Nav.Link>\r\n              </LinkContainer>\r\n              <Nav.Link onClick={handleLogoutClick}>❌Logout</Nav.Link>\r\n            </>\r\n          ) : (\r\n          <>\r\n            <LinkContainer to=\"/signup\">\r\n                <Nav.Link>Signup</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/login\">\r\n                <Nav.Link>Login</Nav.Link>\r\n            </LinkContainer>\r\n          </>\r\n          )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport \"../index.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function HomePage({user}) {\r\n    let history = useHistory();\r\n\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"lander\">\r\n                <h1>🌱FitnessGG</h1>\r\n                <p className=\"text-muted\">Aim for the stars!⭐</p>\r\n                {/* user = true => page functionality, false => none */}\r\n                {user ? (\r\n                    <>\r\n                        {user.profiles[0] ? (\r\n                            <div>\r\n                            Welcome back, {user.first_name}!\r\n                            <br/> <br/>\r\n                            <p>FitnessGoalGetter is an app designed to help guide you to reach your personal health goals.</p>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div>Welcome, {user.username}!</div>\r\n                                <div>Let's get you started by setting up your profile!</div>\r\n                                <Button id=\"home-button\" block size=\"lg\" onClick={(e) => history.push(\"/newprofile\")}>Let's go!</Button>\r\n                            </>\r\n                            \r\n                        )}\r\n                    </>\r\n                    ) : (\r\n                        <div></div>   \r\n                )}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React,  { useState } from 'react'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\"\r\nimport \"../index.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SignUpPage({ onLogin }) {\r\n  let history = useHistory();\r\n  const [first_name, setFirstname] = useState(\"\");\r\n  const [last_name, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function validateForm() {\r\n      return username.length > 0 && password.length > 0 && (password===passwordConfirmation);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setErrors([]);\r\n    setIsLoading(true);\r\n    fetch(\"/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        first_name,\r\n        last_name,\r\n        email,\r\n        username,\r\n        password,\r\n        password_confirmation: passwordConfirmation,\r\n        \r\n      }),\r\n    }).then((r) => {\r\n      setIsLoading(false);\r\n      if (r.ok) {\r\n        r.json().then((user) => onLogin(user)).then(history.push(\"/\"));\r\n      } else {\r\n        r.json().then((err) => setErrors(err.errors));\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n      <div className=\"Signup\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"firstname\">\r\n        <Form.Label>First Name</Form.Label>\r\n        <Form.Control\r\n            autoFocus\r\n            autoComplete=\"off\"\r\n            type=\"firstname\"\r\n            value={first_name}\r\n            onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"lastname\">\r\n        <Form.Label>Last Name</Form.Label>\r\n        <Form.Control\r\n            type=\"lastname\"\r\n            value={last_name}\r\n            onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"username\">\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control\r\n            autoComplete=\"off\"\r\n            type=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password_confirmation\">\r\n        <Form.Label>Password Confirmation</Form.Label>\r\n        <Form.Control\r\n            type=\"password\"\r\n            value={passwordConfirmation}\r\n            onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n        />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n            {isLoading ? \"Loading...\" : \"Signup\"}\r\n        </Button>\r\n        <Form.Group>\r\n          {errors.map((err) => (\r\n            <Alert key={err}>{err}</Alert>\r\n          ))}\r\n        </Form.Group>\r\n      </Form>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\"\r\nimport \"../index.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function LoginPage({ onLogin }) {\r\n  let history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    fetch(\"/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ username: username, password }),\r\n    }).then((r) => {\r\n      setIsLoading(false);\r\n      if (r.ok) {\r\n        r.json().then((user) => onLogin(user)).then(history.push(\"/\"));\r\n      } else {\r\n        r.json().then((err) => setErrors(err.errors));\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n          <Form.Group size=\"lg\" controlId=\"username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n              autoFocus\r\n              autoComplete=\"off\"\r\n              type=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          </Form.Group>\r\n          <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          </Form.Group>\r\n          <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n              {isLoading ? \"Loading...\" : \"Login\"}\r\n          </Button>\r\n          <Form.Group>\r\n            {errors.map((err) => (\r\n              <Alert key={err}>{err}</Alert>\r\n            ))}\r\n          </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../index.css\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"NotFound text-center\">\r\n      <h3>Sorry, page not found!</h3>\r\n    </div>\r\n  );\r\n}","import React,  { useState } from 'react';\r\nimport \"../index.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\n\r\n\r\n\r\nexport default function ProfilePageSetup({handleUpdateUser}) {\r\n    let history = useHistory();\r\n    const [age, setAge] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [height, setHeight] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n    const [fitness_goal, setFitness_goal] = useState(\"\");\r\n    const [nutrition_goal, setNutrition_goal] = useState(\"\");\r\n    const [errors, setErrors] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    function validateForm() {\r\n        return age.length > 0 && gender.length > 0 && height.length > 0 && weight.length > 0 && fitness_goal.length > 0 && nutrition_goal.length > 0;\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setErrors([]);\r\n        setIsLoading(true);\r\n        fetch(\"/profiles\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            age: parseInt(age),\r\n            gender,\r\n            height: parseInt(height),\r\n            weight: parseInt(weight),\r\n            fitness_goal,\r\n            nutrition_goal,\r\n          }),\r\n        }).then((r) => {\r\n          setIsLoading(false);\r\n          if (r.ok) {\r\n            r.json().then(handleUpdateUser).then(history.push(\"/\"));\r\n          } else {\r\n            r.json().then((err) => setErrors(err.errors));\r\n          }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"Signup\">\r\n            <Form onSubmit={handleSubmit}>\r\n                \r\n                <Form.Group size=\"lg\" controlId=\"age\">\r\n                <Form.Label>Age</Form.Label>\r\n                <Form.Control\r\n                    type=\"age\"\r\n                    value={age}\r\n                    onChange={(e) => setAge(e.target.value)}\r\n                />\r\n                </Form.Group>\r\n\r\n                <Form.Group size=\"lg\" controlId=\"gender\">\r\n                <Form.Label>Sex (Male/Female)</Form.Label>\r\n                <Form.Control as=\"select\" onChange={(e) => setGender(e.target.value)}> \r\n                    <option></option>\r\n                    <option value=\"male\">Male</option>\r\n                    <option value=\"female\">Female</option>\r\n                </Form.Control>\r\n                </Form.Group>\r\n                \r\n\r\n                <Form.Group size=\"lg\" controlId=\"height\">\r\n                <Form.Label>Height(cm)</Form.Label>\r\n                <Form.Control\r\n                    type=\"height\"\r\n                    value={height}\r\n                    onChange={(e) => setHeight(e.target.value)}\r\n                />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"weight\">\r\n                <Form.Label>Weight(kg)</Form.Label>\r\n                <Form.Control\r\n                    type=\"weight\"\r\n                    value={weight}\r\n                    onChange={(e) => setWeight(e.target.value)}\r\n                />\r\n                </Form.Group>\r\n\r\n                <Form.Group size=\"lg\" controlId=\"fitness_goal\">\r\n                <Form.Label>Fitness Goal</Form.Label>\r\n                <Form.Control as=\"select\" onChange={(e) => setFitness_goal(e.target.value)}> \r\n                    <option></option>\r\n                    <option value=\"endurance\">Endurance</option>\r\n                    <option value=\"strength\">Strength</option>\r\n                    <option value=\"size\">Size</option>\r\n                </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group size=\"lg\" controlId=\"nutrition_goal\">\r\n                <Form.Label>Nutrition Goal</Form.Label>\r\n                <Form.Control as=\"select\" onChange={(e) => setNutrition_goal(e.target.value)}> \r\n                    <option></option>\r\n                    <option value=\"calorie\">Calorie</option>\r\n                    <option value=\"protein\">Protein</option>\r\n                </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n                    {isLoading ? \"Loading...\" : \"Complete Profile\"}\r\n                </Button>\r\n\r\n                <Form.Group>\r\n                {errors.map((err) => (\r\n                    <Alert key={err}>{err}</Alert>\r\n                ))}\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nexport default function ProfilePage({user}) {\r\n    \r\n    const [age, setAge] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [height, setHeight] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n    const [fitness_goal, setFitness_goal] = useState(\"\");\r\n    const [nutrition_goal, setNutrition_goal] = useState(\"\");\r\n    const [errors, setErrors] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [profile, setProfile] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"/me\").then((r) => {\r\n        if (r.ok) {\r\n            r.json().then((userData) => {\r\n                setProfile(userData.profiles[0])\r\n                setAge(userData.profiles[0].age)\r\n                setGender(userData.profiles[0].gender)\r\n                setHeight(userData.profiles[0].height)\r\n                setWeight(userData.profiles[0].weight)\r\n                setFitness_goal(userData.profiles[0].fitness_goal)\r\n                setNutrition_goal(userData.profiles[0].nutrition_goal)\r\n            });\r\n        }\r\n        });\r\n    }, []);\r\n\r\n\r\n    function validateForm() {\r\n        return age.length > 0 || gender.length > 0 || height.length > 0 || weight.length > 0 || fitness_goal.length > 0 || nutrition_goal.length > 0;\r\n    }\r\n    \r\n    function handleUpdate(e) {\r\n        console.log(age, gender, height, weight, fitness_goal, nutrition_goal)\r\n        // e.preventDefault();\r\n        setErrors([]);\r\n        setIsLoading(true);\r\n        fetch(`/profiles/${profile.id}`, {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            age: parseInt(age),\r\n            gender,\r\n            height: parseInt(height),\r\n            weight: parseInt(weight),\r\n            fitness_goal,\r\n            nutrition_goal,\r\n            \r\n          }),\r\n        }).then((r) => {\r\n          setIsLoading(false);\r\n          if (r.ok) {\r\n            // alert(\"profile updated!\");\r\n          } else {\r\n            r.json().then((err) => setErrors(err.errors));\r\n          }\r\n        });\r\n    }\r\n\r\n    return user ? (\r\n        <>\r\n            <div className=\"Home\">\r\n                <div className='lander'>\r\n                    <h2>📝Welcome to your profile!</h2>\r\n                    <p className=\"text-muted\" >Here you can view and update your personal info</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n                <div className='column'>\r\n                    <h3 >{user.last_name}, {user.first_name} </h3>\r\n                    <Form >\r\n                        <Form.Group size=\"lg\" controlId=\"age\">\r\n                        <Form.Label>Age</Form.Label>\r\n                        <Form.Control\r\n                            type=\"age\"\r\n                            value={age}\r\n                            onChange={(e) => setAge(e.target.value)}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group size=\"lg\" controlId=\"gender\">\r\n                        <Form.Label>Sex (Male/Female)</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={(e) => setGender(e.target.value)}> \r\n                            {profile.gender===\"male\" ? (\r\n                                <>\r\n                                    <option value=\"male\">Male</option>\r\n                                    <option value=\"female\">Female</option>\r\n                                </>\r\n                            ):(\r\n                                <>\r\n                                    <option value=\"female\">Female</option>\r\n                                    <option value=\"male\">Male</option>\r\n                                </>\r\n                            )}                                    \r\n                        </Form.Control>\r\n                        </Form.Group>\r\n                        \r\n\r\n                        <Form.Group size=\"lg\" controlId=\"height\">\r\n                        <Form.Label>Height(cm)</Form.Label>\r\n                        <Form.Control\r\n                            type=\"height\"\r\n                            value={height}\r\n                            onChange={(e) => setHeight(e.target.value)}\r\n                        />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"lg\" controlId=\"weight\">\r\n                        <Form.Label>Weight(kg)</Form.Label>\r\n                        <Form.Control\r\n                            type=\"weight\"\r\n                            value={weight}\r\n                            onChange={(e) => setWeight(e.target.value)}\r\n                        />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group size=\"lg\" controlId=\"fitness_goal\">\r\n                        <Form.Label>Fitness Goal</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={(e) => setFitness_goal(e.target.value)}>\r\n                            {profile.fitness_goal===\"endurance\" ? (\r\n                                <>\r\n                                    <option value=\"endurance\">Endurance</option>\r\n                                    <option value=\"strength\">Strength</option>\r\n                                    <option value=\"size\">Size</option>\r\n                                </>\r\n                            ):profile.fitness_goal===\"strength\" ?(\r\n                                <>\r\n                                    <option value=\"strength\">Strength</option>\r\n                                    <option value=\"size\">Size</option>\r\n                                    <option value=\"endurance\">Endurance</option>\r\n                                </>\r\n                            ):(\r\n                                <>\r\n                                    <option value=\"size\">Size</option>\r\n                                    <option value=\"endurance\">Endurance</option>\r\n                                    <option value=\"strength\">Strength</option>\r\n                                </>\r\n                            )}                                    \r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group size=\"lg\" controlId=\"nutrition_goal\">\r\n                        <Form.Label>Nutrition Goal</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={(e) => setNutrition_goal(e.target.value)}>\r\n                            {profile.nutrition_goal===\"calorie\" ? (\r\n                                <>\r\n                                    <option value=\"calorie\">Calorie</option>\r\n                                    <option value=\"protein\">Protein</option>\r\n                                </>\r\n                            ):(\r\n                                <>\r\n                                    <option value=\"protein\">Protein</option>\r\n                                    <option value=\"calorie\">Calorie</option>\r\n                                </>\r\n                            )}\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()} onClick={handleUpdate}>\r\n                            {isLoading ? \"Loading...\" : \"Update Profile\"}\r\n                        </Button>\r\n\r\n                        <Form.Group>\r\n                        {errors.map((err) => (\r\n                            <Alert key={err}>{err}</Alert>\r\n                        ))}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n\r\n                <div className='BMIcolumn' >\r\n                    {user ? (\r\n                        <>\r\n                            {profile ? (\r\n                                <div>\r\n\r\n                                <br/>\r\n                                <h5>Your current BMI: {(weight / ((height * 0.01)^2)).toFixed(0)}</h5>\r\n                                \r\n                                <p className=\"text-muted\">*Please note that BMI is not always an accurate indicator of health*</p>\r\n                                <img src=\"https://scontent-lga3-2.xx.fbcdn.net/v/t1.15752-9/269885323_931586591060761_5927827463391069206_n.png?_nc_cat=111&ccb=1-5&_nc_sid=ae9488&_nc_ohc=0nFzWryjdJ8AX8GwEcj&tn=J0W_7GHedW-k0UGO&_nc_ht=scontent-lga3-2.xx&oh=03_AVJJVxCVNFULAeM8ey76nMf2KhvUAdLNTXvFkgQ4KtXtLw&oe=61F986FA\" alt=\"BMI_Chart\" width=\"150\"/>\r\n                                <br/>\r\n                                <a href='https://www.cdc.gov/healthyweight/assessing/bmi/adult_bmi/index.html'>Learn more from the CDC</a>\r\n\r\n                                </div>\r\n                            ) : (\r\n                                <>\r\n                                </>\r\n                                \r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <div></div>   \r\n                    )}\r\n                </div>\r\n            \r\n            </div>\r\n                \r\n        \r\n        </>\r\n\r\n        \r\n    ):(<h1> Loading... </h1>)\r\n}\r\n","import React from 'react'\r\nimport { Card, Image } from \"semantic-ui-react\";\r\n\r\nexport default function ExerciseCard({exerciseCard, handleSelectExercise}) {\r\n    return (\r\n        <Card onClick={() => handleSelectExercise(exerciseCard)} fluid={true} centered={false}>\r\n            <Image src={exerciseCard.img} />\r\n            <Card.Content>\r\n                <Card.Description>\r\n                    {exerciseCard.name}\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card } from \"semantic-ui-react\";\r\nimport ExerciseCard from './ExerciseCard';\r\n\r\nexport default function ExerciseCollection({exerciseList, handleSelectExercise}) {\r\n    return (\r\n        <div>\r\n            <Card.Group itemsPerRow={6} textAlign={\"center\"}>\r\n                {exerciseList.map(exercise => <ExerciseCard exerciseCard={exercise} key={exercise.id} handleSelectExercise={handleSelectExercise}/>)}\r\n            </Card.Group>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ExerciseSearch({search, handleSearch}) {\r\n    return (\r\n        <div className=\"ui search\">\r\n            <div className=\"ui icon input\">\r\n                <input className=\"prompt\"  type=\"text\" onChange={handleSearch} value={search}/>\r\n                <i className=\"search icon\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ExerciseDetail({selectedExercise}) {\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{selectedExercise.name}</h2>\r\n            <div className=\"column\">\r\n                Target Area: {selectedExercise.target_area} <br/>\r\n                <img height=\"315px\" alt={selectedExercise.name} src={selectedExercise.img}/>\r\n            </div>\r\n            <div className=\"column\">\r\n                Video Demo: \r\n                <br/>\r\n                <iframe width=\"560\" height=\"315\" src={selectedExercise.video} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n            </div>\r\n            \r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport ExerciseCollection from './ExerciseCollection'\r\nimport ExerciseSearch from './ExerciseSearch'\r\nimport { Container } from \"semantic-ui-react\";\r\nimport ExerciseDetail from \"./ExerciseDetail\";\r\n\r\n\r\nexport default function WorkoutPage({user}) {\r\n    const [exerciseList, setExerciseList] = useState([]); // original list DO NOT MODIFY\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [isLoadedMore, setIsLoadedMore] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [filteredExerciseList, setFilteredExerciseList] = useState([]);\r\n    const [selectedExercise, setSelectedExercise] = useState(null);\r\n    const [workoutPrograms, setWorkoutPrograms] = useState([]);\r\n    const [userProgram, setUserProgram] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"/exercises\")\r\n        .then(resp => resp.json())\r\n        .then(exerciseData => {\r\n            setExerciseList(exerciseData)\r\n            setFilteredExerciseList(exerciseData)\r\n            setIsLoaded(true)\r\n        })\r\n        fetch(\"/programs\")\r\n        .then(resp => resp.json())\r\n        .then(programData => {\r\n            setWorkoutPrograms(programData)\r\n            setIsLoadedMore(true)\r\n        })\r\n        \r\n    }, [])\r\n\r\n    const handleSearch = (e) => {\r\n        setSearch(e.target.value)\r\n        setFilteredExerciseList(exerciseList.filter(exercise => exercise.name.toLowerCase().includes(e.target.value.toLowerCase())))\r\n    }\r\n\r\n    const handleSelectExercise = (exercise) => {\r\n        console.log(exercise)\r\n        setSelectedExercise(exercise)\r\n    }\r\n\r\n    const handleUserProgram = () => {\r\n        workoutPrograms.forEach(program => {\r\n            // console.log(program)\r\n            if(program.name.toLowerCase() === user.profiles[0].fitness_goal.toLowerCase()){\r\n                setUserProgram(program)\r\n            }\r\n        })\r\n        // console.log(userProgram)\r\n    }\r\n\r\n    if (!isLoaded || !isLoadedMore || !user) return <h1> Loading...🌱</h1>;\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <Container >\r\n                <h1>🏋️Workout Program</h1>\r\n                {userProgram.name ? (\r\n                    <>\r\n                        <h4>{userProgram.name.toUpperCase()}</h4>\r\n                        <p className=\"text-muted\">\r\n                            Recommendations <br/>\r\n                            Frequency: {userProgram.times_per_week} times per week <br/>\r\n                            Reps: {userProgram.reps}-{userProgram.reps+2} <br/>\r\n                            Sets: {userProgram.sets-1}-{userProgram.sets} <br/>\r\n                            Workout 1: Chest, Triceps, Calves | Workout 2: Back, Biceps, Core | Workout 3: Shoulders, Traps, Calves | Workout 4: Legs, Core\r\n                        </p>\r\n                    </> \r\n                ):(\r\n                    <>\r\n                        <p className=\"text-muted\" onClick={handleUserProgram}>\r\n                            Click here to show current workout program details\r\n                        </p>\r\n                    </>\r\n                )}\r\n                \r\n\r\n                \r\n                {selectedExercise ? <ExerciseDetail selectedExercise={selectedExercise} /> : null}\r\n                \r\n                <h3>Exercise List</h3>\r\n                <p className=\"text-muted\">\r\n                    Feel free to click on each exercise card for more info!\r\n                </p>\r\n                <ExerciseSearch search={search} handleSearch={handleSearch}/>\r\n                <br />\r\n                <ExerciseCollection exerciseList={filteredExerciseList} handleSelectExercise={handleSelectExercise}/>\r\n                <br />\r\n            </Container>\r\n        </div>\r\n    );\r\n        \r\n        \r\n}\r\n","import React, {useState} from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\nexport default function NutritionPage({user}) {\r\n    let fitnessGoal= (user?.profiles[0].fitness_goal)\r\n    const nutritionGoal = (user?.profiles[0].nutrition_goal);\r\n    const userWeight = (user?.profiles[0].weight);\r\n    const userHeight = (user?.profiles[0].height);\r\n    const userGender = (user?.profiles[0].gender);\r\n    const userAge = (user?.profiles[0].age);\r\n    const [intake, setIntake] = useState(\"\");\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState(null);\r\n\r\n    const handleNutritionGoal = () => {\r\n        if(nutritionGoal === \"protein\"){\r\n            setIntake(userWeight*1.6)\r\n        }else{\r\n            let newActivityFactor = 0;\r\n            if(fitnessGoal === \"size\"){\r\n                newActivityFactor = 1.7;\r\n            }else if(fitnessGoal === \"strength\"){\r\n                newActivityFactor = 1.5;\r\n            }else{\r\n                newActivityFactor = 1.3;\r\n            }\r\n            let newIntake = 0;\r\n            if(userGender === \"male\"){\r\n                newIntake = ((10*userWeight + 6.25*userHeight - 5*userAge + 5)*newActivityFactor)\r\n            }else{\r\n                newIntake = ((10*userWeight + 6.25*userHeight - 5*userAge - 161)*newActivityFactor)\r\n            }\r\n            setIntake(newIntake);\r\n        }\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const handleRequest = (e) => {\r\n        e.preventDefault();\r\n        fetch(\"https://api.api-ninjas.com/v1/nutrition?query=\" + search, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"X-Api-Key\": \"kF76JGdVzVshQBBR4J2ZvA==Y7gJdqjNqN8CQamj\"\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => \r\n            {\r\n                console.log(data);\r\n                setSearchResults(data);\r\n            })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    return user ? (\r\n        <div className=\"Home\">\r\n            <div className=\"lander\">\r\n                <h2>🥑Nutrition Tracker</h2>\r\n                {intake ? (\r\n                    <>\r\n                        <h4>{nutritionGoal.toUpperCase()}</h4>\r\n                        <p className=\"text-muted\">\r\n                            Recommended daily {nutritionGoal.toLowerCase()} intake: {intake}{nutritionGoal === \"protein\" ? (<>g</>):(<>kcal</>)}\r\n                        </p>\r\n                        <p className=\"text-muted\">*Please note that the above number is a rough calculation*</p>\r\n                    </>\r\n                ):(\r\n                    <>\r\n                        <p className=\"text-muted\" onClick={handleNutritionGoal}>\r\n                            Click here to show current nutrition goal details\r\n                        </p>\r\n                    </>\r\n                )}\r\n                <br/>\r\n                <div className=\"ui search\">\r\n                    <div className=\"ui icon input\" style={{width: \"100%\"}}>\r\n                        <input className=\"prompt\"  type=\"text\" onChange={handleSearch} value={search}/>\r\n                        <i className=\"search icon\" />\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <Button id=\"nutrition-button\" block size=\"lg\" onClick={handleRequest} >Search!</Button>\r\n\r\n                {searchResults ? (\r\n                    <>\r\n                        <br/>\r\n                        {searchResults.length > 0 ? (\r\n                            <>  \r\n                                <h5>✔️Search Success!</h5>\r\n                                <div>\r\n                                    Name: {searchResults[0].name} <br/>\r\n                                    Serving Size: {searchResults[0].serving_size_g}g <br/>\r\n                                    Calories: {searchResults[0].calories}kcal <br/>\r\n                                    Protein: {searchResults[0].protein_g}g <br/>\r\n                                    Total Fat: {searchResults[0].fat_total_g}g <br/>\r\n                                    Total Carbs: {searchResults[0].carbohydrates_total_g}g <br/>\r\n                                    Sodium: {searchResults[0].sodium_mg}mg\r\n                                </div>\r\n                                \r\n                            </>\r\n                        ):(\r\n                            <>\r\n                                <h5>❌No Results Found</h5>\r\n                            </>\r\n                        )}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    ):(<h1> Loading...🌱</h1>)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"./NavBar\"\r\nimport HomePage from \"./HomePage\";\r\nimport SignUpPage from \"./SignUpPage\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport NotFound from \"./NotFound\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport ProfilePageSetup from \"./ProfilePageSetup\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport WorkoutPage from \"./WorkoutPage\";\r\nimport NutritionPage from \"./NutritionPage\";\r\n\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState(null);\r\n    // const [isLoaded, setIsLoaded] = useState(false);\r\n    // auto-login\r\n    useEffect(() => {\r\n        fetch(\"/me\").then((r) => {\r\n        if (r.ok) {\r\n            r.json().then((userData) => setUser(userData));\r\n            // setIsLoaded(true);\r\n        }\r\n        });\r\n    }, []);\r\n\r\n    function handleUpdateUser(){\r\n        fetch(`/me`)\r\n        .then((r) => r.json())\r\n        .then((userData) => setUser(userData));\r\n    }\r\n\r\n    return (\r\n        <div className=\"App container py-3\">\r\n            \r\n            <NavBar user={user} setUser={setUser}/>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <HomePage user={user} setUser={setUser}/>\r\n                </Route>\r\n                <Route exact path=\"/login\">\r\n                    <LoginPage onLogin={setUser}/>\r\n                </Route>\r\n                <Route exact path=\"/signup\">\r\n                    <SignUpPage onLogin={setUser}/>\r\n                </Route>\r\n                <Route exact path=\"/newprofile\">\r\n                    <ProfilePageSetup handleUpdateUser={handleUpdateUser}/>\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <ProfilePage user={user}/>\r\n                </Route>\r\n                <Route exact path=\"/workout\">\r\n                    <WorkoutPage user={user}/>\r\n                </Route>\r\n                <Route exact path=\"/nutrition\">\r\n                    <NutritionPage user={user}/>\r\n                </Route>\r\n\r\n                <Route>\r\n                    <NotFound />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import 'bootstrap/dist/css/bootstrap.css';\nimport \"semantic-ui-css/semantic.min.css\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport './index.css';\nimport App from './components/App.js';\n\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}